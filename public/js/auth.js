// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
document.getElementById("registerForm")?.addEventListener("submit", async (event) => {
  event.preventDefault();

  const name = document.getElementById("name").value.trim();
  const email = document.getElementById("email").value.trim();
  const phone = document.getElementById("phone").value.trim();
  const password = document.getElementById("password").value.trim();

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ email
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailRegex.test(email)) {
    showToast("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.", "danger");
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã)
  const phoneRegex = /^\d+$/;
  if (!phoneRegex.test(phone)) {
    showToast("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.", "danger");
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤)
  if (password.length < 6) {
    showToast("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤.", "danger");
    return;
  }

  try {
    const response = await fetch("/api/auth/register", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ name, email, phone, password }),
    });

    const data = await response.json();

    if (response.ok) {
      showToast("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç.", "success", true);
      window.location.href = "/login.html"; // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
    } else {
      showToast(data.message || "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", "danger");
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞:", error);
    showToast("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", "danger");
  }
});

// üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
document.getElementById("loginForm")?.addEventListener("submit", async (event) => {
  event.preventDefault();

  const email = document.getElementById("email").value.trim();
  const password = document.getElementById("password").value.trim();

  try {
    const response = await fetch("/api/auth/login", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ email, password }),
    });

    const data = await response.json();

    if (response.ok) {
      localStorage.setItem("emailForOTP", email);
      showToast("–ö–æ–¥ OTP –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –¥–ª—è –≤—Ö–æ–¥–∞.", "success", true);
      window.location.href = "/verify-otp.html"; // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–≤–æ–¥–∞ OTP
    } else {
      showToast(data.message || "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", "danger");
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞:", error);
    showToast("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", "danger");
  }
});

// üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ OTP-–∫–æ–¥–∞
document.getElementById("otpForm")?.addEventListener("submit", async (event) => {
  event.preventDefault();

  const email = localStorage.getItem("emailForOTP");
  const otp = document.getElementById("otp").value.trim();

  try {
    const response = await fetch("/api/auth/verify-otp", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ email, otp }),
    });

    const data = await response.json();

    if (response.ok) {
      localStorage.setItem("token", data.token);
      showToast("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!", "success", true);
      window.location.href = "/profile.html"; // –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å
    } else {
      showToast(data.message || "–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è OTP", "danger");
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞:", error);
    showToast("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", "danger");
  }
});

  
  // üîπ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è
  document.getElementById("forgotPasswordForm")?.addEventListener("submit", async (event) => {
    event.preventDefault();
  
    const email = document.getElementById("email").value;
  
    try {
      const response = await fetch("/api/auth/forgot-password", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email }),
      });
  
      const data = await response.json();
  
      if (response.ok) {
        showToast("–°—Å—ã–ª–∫–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ email", "success", true);
        window.location.href = "/login.html"; // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
      } else {
        showToast(data.message || "–û—à–∏–±–∫–∞", "danger");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞:", error);
      showToast("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", "danger");
    }
  });
  
  // üîπ –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è
  document.getElementById("resetPasswordForm")?.addEventListener("submit", async (event) => {
    event.preventDefault();
  
    const urlParams = new URLSearchParams(window.location.search);
    const token = urlParams.get("token");
    const password = document.getElementById("newPassword").value;
  
    try {
      const response = await fetch("/api/auth/reset-password", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ token, password }),
      });
  
      const data = await response.json();
  
      if (response.ok) {
        showToast("–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω! –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.", "success", true);
        window.location.href = "/login.html";
      } else {
        showToast(data.message || "–û—à–∏–±–∫–∞", "danger");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞:", error);
      showToast("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", "danger");
    }
  });
  

{
	"info": {
		"_postman_id": "8ffa81ac-11b4-41e2-bcc3-1888b0c81fe7",
		"name": "Car Sharing - Client API",
		"description": "Тестирование API для клиента (пользователя)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40702967",
		"_collection_link": "https://erazhan-4591.postman.co/workspace/Car-Sharing-API~75beb161-740e-4b44-9464-6a2b0d297ff2/collection/40702967-8ffa81ac-11b4-41e2-bcc3-1888b0c81fe7?action=share&source=collection_link&creator=40702967"
	},
	"item": [
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Регистрация успешна\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"message\", \"Регистрация успешна\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Test User\",\r\n  \"email\": \"example@gmail.com\",\r\n  \"password\": \"password123\",\r\n  \"phone\": \"1234567890\",\r\n  \"role\": \"admin\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/auth/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OTP успешно отправлен на email\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"message\", \"OTP-код отправлен на email\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"example@gmail.com\",\r\n  \"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetOtp",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Получен OTP-код\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"otp\");\r",
							"    pm.environment.set(\"test_otp\", jsonData.otp);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"example@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/auth/get-otp-test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"auth",
						"get-otp-test"
					]
				}
			},
			"response": []
		},
		{
			"name": "VerifyOtp",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Токен получен\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"token\");\r",
							"    pm.environment.set(\"auth_token\", jsonData.token);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"example@gmail.com\",\r\n  \"otp\": \"{{test_otp}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/auth/verify-otp",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"auth",
						"verify-otp"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllCars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Список машин получен\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetCarByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Данные машины получены\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"brand\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/cars/67a160b63681975e3b2a830d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cars",
						"67a160b63681975e3b2a830d"
					]
				}
			},
			"response": []
			
		},
		{
		"name": "Create Booking",
		"request": {
			"method": "POST",
			"header": [
			{ "key": "Authorization", "value": "Bearer {{auth_token}}", "type": "text" },
			{ "key": "Content-Type", "value": "application/json", "type": "text" }
			],
			"url": {
			"raw": "http://localhost:3000/api/bookings",
			"protocol": "http",
			"host": ["localhost"],
			"port": "3000",
			"path": ["api", "bookings"]
			},
			"body": {
			"mode": "raw",
			"raw": "{ \"carId\": \"67a160b63681975e3b2a830d\", \"startDate\": \"2024-02-10\", \"endDate\": \"2024-02-15\" }"
			}
		},
		"event": [
			{
			"listen": "test",
			"script": {
				"exec": [
				"pm.test(\"Бронирование успешно создано\", function () {", 
				"    pm.response.to.have.status(201);", 
				"    var jsonData = pm.response.json();", 
				"    pm.expect(jsonData.message).to.eql(\"Бронирование успешно создано.\");", 
				"    pm.environment.set(\"booking_id\", jsonData.booking._id);", 
				"});"
				],
				"type": "text/javascript"
			}
			}
		]
		},
		{
			"name": "Create Booking 2",
			"request": {
				"method": "POST",
				"header": [
				{ "key": "Authorization", "value": "Bearer {{auth_token}}", "type": "text" },
				{ "key": "Content-Type", "value": "application/json", "type": "text" }
				],
				"url": {
				"raw": "http://localhost:3000/api/bookings",
				"protocol": "http",
				"host": ["localhost"],
				"port": "3000",
				"path": ["api", "bookings"]
				},
				"body": {
				"mode": "raw",
				"raw": "{ \"carId\": \"67a160b63681975e3b2a8314\", \"startDate\": \"2024-02-10\", \"endDate\": \"2024-02-15\" }"
				}
			},
			"event": [
				{
				"listen": "test",
				"script": {
					"exec": [
					"pm.test(\"Бронирование успешно создано\", function () {", 
					"    pm.response.to.have.status(201);", 
					"    var jsonData = pm.response.json();", 
					"    pm.expect(jsonData.message).to.eql(\"Бронирование успешно создано.\");", 
					"    pm.environment.set(\"booking2_id\", jsonData.booking._id);", 
					"});"
					],
					"type": "text/javascript"
				}
				}
			]
		},
		{
			"name": "Update Profile",
			"request": {
			  "method": "PUT",
			  "header": [
				{ "key": "Authorization", "value": "Bearer {{auth_token}}", "type": "text" },
				{ "key": "Content-Type", "value": "application/json", "type": "text" }
			  ],
			  "url": {
				"raw": "http://localhost:3000/api/auth/profile/update",
				"protocol": "http",
				"host": ["localhost"],
				"port": "3000",
				"path": ["api", "auth", "profile", "update"]
			  },
			  "body": {
				"mode": "raw",
				"raw": "{ \"name\": \"Updated User\", \"email\": \"updated@example.com\", \"phone\": \"9876543210\" }"
			  }
			},
			"event": [
			  {
				"listen": "test",
				"script": {
				  "exec": [
					"pm.test(\"Профиль успешно обновлен\", function () {", 
					"    pm.response.to.have.status(200);", 
					"    var jsonData = pm.response.json();", 
					"    pm.expect(jsonData.message).to.eql(\"Профиль успешно обновлен\");", 
					"});"
				  ],
				  "type": "text/javascript"
				}
			  }
			]
		  },
		  {
			"name": "Pay for Booking",
			"request": {
			  "method": "POST",
			  "header": [
				{ "key": "Authorization", "value": "Bearer {{auth_token}}", "type": "text" },
				{ "key": "Content-Type", "value": "application/json", "type": "text" }
			  ],
			  "url": {
				"raw": "http://localhost:3000/api/bookings/{{booking_id}}/pay",
				"protocol": "http",
				"host": ["localhost"],
				"port": "3000",
				"path": ["api", "bookings", "{{booking_id}}", "pay"]
			  }
			},
			"event": [
			  {
				"listen": "test",
				"script": {
				  "exec": [
					"pm.test(\"Бронирование успешно оплачено\", function () {", 
					"    pm.response.to.have.status(200);", 
					"    var jsonData = pm.response.json();", 
					"    pm.expect(jsonData.message).to.eql(\"Бронирование успешно оплачено.\");", 
					"});"
				  ],
				  "type": "text/javascript"
				}
			  }
			]
		  },
		  {
			"name": "Get My Bookings",
			"request": {
			  "method": "GET",
			  "header": [
				{ "key": "Authorization", "value": "Bearer {{auth_token}}", "type": "text" }
			  ],
			  "url": {
				"raw": "http://localhost:3000/api/bookings",
				"protocol": "http",
				"host": ["localhost"],
				"port": "3000",
				"path": ["api", "bookings"]
			  }
			},
			"event": [
			  {
				"listen": "test",
				"script": {
				  "exec": [
					"pm.test(\"Список бронирований получен\", function () {", 
					"    pm.response.to.have.status(200);", 
					"    var jsonData = pm.response.json();", 
					"    pm.expect(jsonData).to.be.an(\"array\");", 
					"});"
				  ],
				  "type": "text/javascript"
				}
			  }
			]
		  },
		  {
			"name": "Cancel Booking",
			"request": {
			  "method": "DELETE",
			  "header": [
				{ "key": "Authorization", "value": "Bearer {{auth_token}}", "type": "text" }
			  ],
			  "url": {
				"raw": "http://localhost:3000/api/bookings/{{booking2_id}}/cancel",
				"protocol": "http",
				"host": ["localhost"],
				"port": "3000",
				"path": ["api", "bookings", "{{booking2_id}}", "cancel"]
			  }
			},
			"event": [
			  {
				"listen": "test",
				"script": {
				  "exec": [
					"pm.test(\"Бронирование успешно отменено\", function () {", 
					"    pm.response.to.have.status(200);", 
					"    var jsonData = pm.response.json();", 
					"    pm.expect(jsonData.message).to.eql(\"Бронирование успешно отменено.\");", 
					"});"
				  ],
				  "type": "text/javascript"
				}
			  }
			]
		  }
	]
}